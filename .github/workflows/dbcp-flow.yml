name: Multi-Job Workflow

on:
  push:
    branches:
      - dev
      - main
  schedule:
    - cron: "0 3 * * *" # Adjust the schedule
  workflow_dispatch:

jobs:
  archive:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Archive data
        run: |
          echo "Archiving data..."

  matrix_prep:
    needs: archive # Ensure archive job finishes first
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      # - name: Set branch dynamically
      #   id: set-branch
      #   run: |
      #     if [ "${{ github.event_name }}" == "push" ]; then
      #       echo "matrix=${{ github.ref_name }}" >> $GITHUB_OUTPUT
      #     else
      #       echo "matrix='["main", "dev"]'" >> $GITHUB_OUTPUT
      #     fi
      - id: set-branch
        run: echo "matrix={\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}" >> $GITHUB_OUTPUT

      - name: echo matrix
        run: echo ${{ steps.set-branch.outputs.matrix }}

  etl:
    needs: matrix_prep # Ensure archive job finishes first
    runs-on: ubuntu-latest
    if: ${{ always() }}
    strategy:
      matrix: ${{ fromJson(needs.matrix_prep.outputs.matrix) }}
    steps:
      - name: print matrix
        run: echo ${{ matrix.project }} ${{ matrix.config }}
      # - name: Set branch dynamically
      #   id: set-branch
      #   run: |
      #     if [ "${{ github.event_name }}" == "push" ]; then
      #       echo "branch=${{ github.ref_name }}" >> $GITHUB_ENV
      #     else
      #       echo "branch=${{ matrix.branch }}" >> $GITHUB_ENV

      # - name: Checkout code
      #   uses: actions/checkout@v3
      #   with:
      #     ref: ${{ env.branch }}
